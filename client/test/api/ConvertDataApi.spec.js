/**
 * convertapi
 * Convert API lets you effortlessly convert file formats and types.
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.5
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CloudmersiveConvertApiClient);
  }
}(this, function(expect, CloudmersiveConvertApiClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CloudmersiveConvertApiClient.ConvertDataApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ConvertDataApi', function() {
    describe('convertDataCsvToJson', function() {
      it('should call convertDataCsvToJson successfully', function(done) {
        //uncomment below and update the code to test convertDataCsvToJson
        //instance.convertDataCsvToJson(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataCsvToXml', function() {
      it('should call convertDataCsvToXml successfully', function(done) {
        //uncomment below and update the code to test convertDataCsvToXml
        //instance.convertDataCsvToXml(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataJsonToXml', function() {
      it('should call convertDataJsonToXml successfully', function(done) {
        //uncomment below and update the code to test convertDataJsonToXml
        //instance.convertDataJsonToXml(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataXlsToJson', function() {
      it('should call convertDataXlsToJson successfully', function(done) {
        //uncomment below and update the code to test convertDataXlsToJson
        //instance.convertDataXlsToJson(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataXlsxToJson', function() {
      it('should call convertDataXlsxToJson successfully', function(done) {
        //uncomment below and update the code to test convertDataXlsxToJson
        //instance.convertDataXlsxToJson(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataXlsxToXml', function() {
      it('should call convertDataXlsxToXml successfully', function(done) {
        //uncomment below and update the code to test convertDataXlsxToXml
        //instance.convertDataXlsxToXml(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataXmlEditAddAttributeWithXPath', function() {
      it('should call convertDataXmlEditAddAttributeWithXPath successfully', function(done) {
        //uncomment below and update the code to test convertDataXmlEditAddAttributeWithXPath
        //instance.convertDataXmlEditAddAttributeWithXPath(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataXmlEditAddChildWithXPath', function() {
      it('should call convertDataXmlEditAddChildWithXPath successfully', function(done) {
        //uncomment below and update the code to test convertDataXmlEditAddChildWithXPath
        //instance.convertDataXmlEditAddChildWithXPath(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataXmlEditRemoveAllChildNodesWithXPath', function() {
      it('should call convertDataXmlEditRemoveAllChildNodesWithXPath successfully', function(done) {
        //uncomment below and update the code to test convertDataXmlEditRemoveAllChildNodesWithXPath
        //instance.convertDataXmlEditRemoveAllChildNodesWithXPath(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataXmlEditReplaceWithXPath', function() {
      it('should call convertDataXmlEditReplaceWithXPath successfully', function(done) {
        //uncomment below and update the code to test convertDataXmlEditReplaceWithXPath
        //instance.convertDataXmlEditReplaceWithXPath(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataXmlEditSetValueWithXPath', function() {
      it('should call convertDataXmlEditSetValueWithXPath successfully', function(done) {
        //uncomment below and update the code to test convertDataXmlEditSetValueWithXPath
        //instance.convertDataXmlEditSetValueWithXPath(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataXmlFilterWithXPath', function() {
      it('should call convertDataXmlFilterWithXPath successfully', function(done) {
        //uncomment below and update the code to test convertDataXmlFilterWithXPath
        //instance.convertDataXmlFilterWithXPath(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataXmlQueryWithXQuery', function() {
      it('should call convertDataXmlQueryWithXQuery successfully', function(done) {
        //uncomment below and update the code to test convertDataXmlQueryWithXQuery
        //instance.convertDataXmlQueryWithXQuery(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataXmlQueryWithXQueryMulti', function() {
      it('should call convertDataXmlQueryWithXQueryMulti successfully', function(done) {
        //uncomment below and update the code to test convertDataXmlQueryWithXQueryMulti
        //instance.convertDataXmlQueryWithXQueryMulti(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataXmlRemoveWithXPath', function() {
      it('should call convertDataXmlRemoveWithXPath successfully', function(done) {
        //uncomment below and update the code to test convertDataXmlRemoveWithXPath
        //instance.convertDataXmlRemoveWithXPath(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataXmlToJson', function() {
      it('should call convertDataXmlToJson successfully', function(done) {
        //uncomment below and update the code to test convertDataXmlToJson
        //instance.convertDataXmlToJson(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('convertDataXmlTransformWithXsltToXml', function() {
      it('should call convertDataXmlTransformWithXsltToXml successfully', function(done) {
        //uncomment below and update the code to test convertDataXmlTransformWithXsltToXml
        //instance.convertDataXmlTransformWithXsltToXml(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
